// <auto-generated />
using Encuesta_Acme;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Encuesta_Acme.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20240518233936_Respuestas")]
    partial class Respuestas
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.30")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Encuesta_Acme.Entidades.EncuestaCampoRespuesta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CampoId")
                        .HasColumnType("int");

                    b.Property<int>("EncuestaRespuestaId")
                        .HasColumnType("int");

                    b.Property<string>("Respuesta")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CampoId");

                    b.HasIndex("EncuestaRespuestaId");

                    b.ToTable("EncuesatCampoRespuesta");
                });

            modelBuilder.Entity("Encuesta_Acme.Entidades.EncuestaRespuesta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("EncuestaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EncuestaId");

                    b.ToTable("EncuestaRespuestas");
                });

            modelBuilder.Entity("Encuesta_Acme.Models.Campo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("EncuestaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Requerido")
                        .HasColumnType("bit");

                    b.Property<string>("TipoCampo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EncuestaId");

                    b.ToTable("Campos");
                });

            modelBuilder.Entity("Encuesta_Acme.Models.Encuesta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Encuestas");
                });

            modelBuilder.Entity("Encuesta_Acme.Entidades.EncuestaCampoRespuesta", b =>
                {
                    b.HasOne("Encuesta_Acme.Models.Campo", "Campo")
                        .WithMany()
                        .HasForeignKey("CampoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Encuesta_Acme.Entidades.EncuestaRespuesta", "EncuestaRespuesta")
                        .WithMany("CampoRespuestas")
                        .HasForeignKey("EncuestaRespuestaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campo");

                    b.Navigation("EncuestaRespuesta");
                });

            modelBuilder.Entity("Encuesta_Acme.Entidades.EncuestaRespuesta", b =>
                {
                    b.HasOne("Encuesta_Acme.Models.Encuesta", "Encuesta")
                        .WithMany()
                        .HasForeignKey("EncuestaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Encuesta");
                });

            modelBuilder.Entity("Encuesta_Acme.Models.Campo", b =>
                {
                    b.HasOne("Encuesta_Acme.Models.Encuesta", "Encuesta")
                        .WithMany("Campos")
                        .HasForeignKey("EncuestaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Encuesta");
                });

            modelBuilder.Entity("Encuesta_Acme.Entidades.EncuestaRespuesta", b =>
                {
                    b.Navigation("CampoRespuestas");
                });

            modelBuilder.Entity("Encuesta_Acme.Models.Encuesta", b =>
                {
                    b.Navigation("Campos");
                });
#pragma warning restore 612, 618
        }
    }
}
